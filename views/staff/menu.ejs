<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
<link rel="stylesheet" href="/css/staffmenu.css">

<a href="/dashboard/staffdashboard" class="btn-back">üîô Back to View Dining Tables</a>

<div class="menu-container">
  <div class="menu-left">
    <input type="text" placeholder="üîç Search menu..." class="search-input">

    <h2 class="menu-title">Our <span class="highlight">Menu</span></h2>
    <p class="subtitle">Delicious meals prepared fresh for you</p>

    <div class="menu-grid">
      <% menus.forEach(menu => { %>
        <div class="menu-card">
          <img src="/uploads/<%= menu.image %>">
          <h4><%= menu.item_name %></h4>
          <p><%= menu.description %></p>
          <div class="price">‚Çπ<%= menu.price %></div>
          <br>
          <button class="btn-add" onclick="selectItem('<%= menu.item_name %>', <%= menu.price %>)">Add to Order</button>
        </div>
      <% }); %>
    </div>
  </div>

  <div class="menu-right">
    <h3>Current Order</h3>
    <p><strong>Table ID:</strong> <%= tableId %></p>
    <p><strong>Date:</strong> <%= currentDate %></p>
    <hr>
    <h4>Order Items</h4>
    <!-- Order summary area -->
    <div class="order-items" id="orderSummary">
      <!-- Dynamic items appear here -->
    </div>
    <hr>
    <p><strong>Total Amount:</strong> ‚Çπ<span id="totalBill">0</span></p>
    <button class="btn-confirm-final" type="button" style="background-color: #007bff; color: white;">Submit Order</button>

    <!-- Order Form Box (hidden initially) -->
    <div id="orderForm" style="display: none; margin-top: 15px; background: #040404; padding: 15px; border: 1px solid #ff0000; border-radius: 8px;">
      <h3 id="itemName"></h3>
      <p>Price: <span id="itemPrice"></span></p>
      <div style="margin-bottom: 10px;">
        <button onclick="adjustQty(-1)">-</button>
        <input type="number" id="qty" value="1" min="1" style="width:40px;" readonly>
        <button onclick="adjustQty(1)">+</button>
      </div>
      <p>Total: ‚Çπ<span id="total"></span></p>
      <button class="btn-confirm" type="button" style="background-color: green; color: white;">Confirm</button>
      <button type="button" onclick="document.getElementById('orderForm').style.display='none'">Cancel</button>
    </div>
  </div>
</div>

<!-- Hidden Inputs -->
<input type="hidden" id="table_id" value="<%= tableId %>">
<input type="hidden" id="staff_id" value="1">
<input type="hidden" id="ord_date" value="<%= currentDate %>">

<script>
  let selectedPrice = 0;
  let selectedItem = "";
  let totalAmount = 0;
  const orderItems = [];

  function selectItem(name, price) {
    selectedItem = name;
    selectedPrice = price;
    document.getElementById('orderForm').style.display = 'block';
    document.getElementById('itemName').innerText = name;
    document.getElementById('itemPrice').innerText = "‚Çπ" + price;
    document.getElementById('qty').value = 1;
    document.getElementById('total').innerText = price;
  }

  function adjustQty(change) {
    let qtyInput = document.getElementById('qty');
    let qty = parseInt(qtyInput.value) + change;
    if (qty < 1) qty = 1;
    qtyInput.value = qty;
    document.getElementById('total').innerText = qty * selectedPrice;
  }

  document.querySelector('.btn-confirm').addEventListener('click', function () {
    const qty = parseInt(document.getElementById('qty').value);
    const total = qty * selectedPrice;

    const item = {
      name: selectedItem,
      price: selectedPrice,
      quantity: qty,
      total: total,
      id: Date.now()
    };
    orderItems.push(item);

    const orderSection = document.getElementById('orderSummary');
    const itemDiv = document.createElement('div');
    itemDiv.className = "order-item";
    itemDiv.setAttribute('data-id', item.id);
    itemDiv.innerHTML = `
      <p><strong>${item.name}</strong> x ${item.quantity} = ‚Çπ${item.total}</p>
      <button onclick="removeItem(${item.id})" class="btn-remove">‚ùå Remove</button>
    `;
    orderSection.appendChild(itemDiv);

    totalAmount += total;
    document.getElementById('totalBill').innerText = totalAmount;

    document.getElementById('orderForm').style.display = 'none';
  });

  function removeItem(itemId) {
    const index = orderItems.findIndex(item => item.id === itemId);
    if (index !== -1) {
      totalAmount -= orderItems[index].total;
      document.getElementById('totalBill').innerText = totalAmount;
      orderItems.splice(index, 1);
      const itemDiv = document.querySelector(`[data-id="${itemId}"]`);
      if (itemDiv) itemDiv.remove();
    }
  }

  document.querySelector('.btn-confirm-final').addEventListener('click', function () {
    if (orderItems.length === 0) {
      alert("Add at least one item before submitting the order.");
      return;
    }

   const dateInput = document.getElementById('ord_date').value;
const dateObj = new Date(dateInput);
const yyyy = dateObj.getFullYear();
const mm = String(dateObj.getMonth() + 1).padStart(2, '0');
const dd = String(dateObj.getDate()).padStart(2, '0');
const formattedDate = `${yyyy}-${mm}-${dd}`;
const tableId = document.getElementById('table_id').value;
const staffId = document.getElementById('staff_id').value;
const orderData = {
  tableId: tableId,
  staffId: staffId,
  date: formattedDate, // Use formatted date
  items: orderItems
};
fetch('/dashboard/save-order', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify(orderData)
})
  .then(async res => {
    const contentType = res.headers.get("content-type");
    if (!res.ok) {
      const errMessage = await res.text();
      throw new Error(errMessage);
    }
    if (contentType && contentType.includes("application/json")) {
      return res.json();
    } else {
      throw new Error("Invalid JSON response");
    }
  })

.then(data => {
  alert("Order placed successfully!");
 
  orderItems.length = 0;
  totalAmount = 0;
  document.getElementById('orderSummary').innerHTML = '';
  document.getElementById('totalBill').innerText = '0';

})

  .catch(error => {
    console.error("Error saving order:", error.message);
  });

  });
</script>
